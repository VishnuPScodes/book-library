{"version":3,"file":"react-animated-text-content.development.js","sources":["../src/helpers.ts","../src/styles/AnimatedFragment.styled.ts","../src/index.tsx"],"sourcesContent":["import { ReactText } from 'react';\nimport { WHITE_SPACE_CODE } from '.';\n\nexport const splitChildrenToFragments = (children: ReactText) =>\n  children.toString().split(' ');\n\nexport const concatFragments = (children: ReactText) => {\n  const splittedChildren = splitChildrenToFragments(children);\n\n  return ([] as string[])\n    .concat(\n      ...splittedChildren.map((word, index) =>\n        index !== 0 ? [WHITE_SPACE_CODE, word] : [word]\n      )\n    )\n    .map((word) => (word === ' ' ? WHITE_SPACE_CODE : word));\n};\n","import styled, { css } from 'styled-components';\nimport { AnimationShapeType } from '..';\n\nexport const AnimatedFragment = styled.span<{\n  count?: number;\n  interval?: number;\n}>`\n  position: relative;\n  display: inline-block;\n  visibility: hidden;\n`;\n\nexport const StyledWrapper = styled.div<{\n  uid: string;\n  count: number;\n  interval: number;\n  duration: number;\n  shouldAnimate: boolean;\n  animation: AnimationShapeType;\n}>`\n  @keyframes fragmentletter-${({ uid }) => uid} {\n    0% {\n      opacity: 0;\n      visibility: hidden;\n      transform: translateX(${({ animation: { x } }) => x ?? 0})\n        translateY(${({ animation: { y } }) => y ?? 0})\n        scale(${({ animation: { scale } }) => scale ?? 1});\n    }\n    100% {\n      oapcity: 1;\n      visibility: visible;\n      transform: translateX(0) translateY(0) scale(1);\n    }\n  }\n\n  & > span {\n    display: inline-block;\n  }\n\n  & ${AnimatedFragment} {\n    text-decoration: inherit;\n    vertical-align: inherit;\n\n    animation: ${({ animation: { ease }, duration }) =>\n      `${duration}s ${ease ?? 'ease-in-out'} forwards;`};\n\n    animation-name: ${({ shouldAnimate, uid }) =>\n      shouldAnimate ? `fragmentletter-${uid}` : ''};\n  }\n\n  ${({ count = 0, interval }) => {\n    let styles = '';\n\n    for (let i = 0; i < count; i += 1) {\n      styles += `${AnimatedFragment}:nth-of-type(${i + 1}) {\n            animation-delay: ${(interval || 0.04) * i}s;\n          }`;\n    }\n\n    return css`\n      ${styles}\n    `;\n  }}\n`;\n","import React, {\n  ElementType,\n  ReactText,\n  useEffect,\n  useState,\n  useRef,\n  FC,\n  ReactNode,\n} from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { concatFragments } from './helpers';\nimport {\n  AnimatedFragment,\n  StyledWrapper,\n} from './styles/AnimatedFragment.styled';\n\nexport interface AnimationShapeType {\n  x?: string;\n  y?: string;\n  scale?: number;\n  ease?: string;\n}\n\ntype AnimationType =\n  | 'blocks'\n  | 'wave'\n  | 'float'\n  | 'bounce'\n  | 'throw'\n  | 'diagonal'\n  | 'rifle'\n  | 'lights';\n\ninterface AnimatedTextProps {\n  type?: 'chars' | 'words';\n  children?: ReactText;\n  interval?: number;\n  duration?: number;\n  animation?: AnimationShapeType;\n  animationType?: AnimationType;\n  tag?: ElementType;\n  className?: string;\n  includeWhiteSpaces?: boolean;\n  threshold?: number;\n  rootMargin?: string;\n}\n\ninterface ExtendedAnimationShapeType extends AnimationShapeType {\n  duration?: number;\n  interval?: number;\n}\n\nconst PREDEFINED_ANIMATIONS: Record<AnimationType, ExtendedAnimationShapeType> =\n  {\n    blocks: {\n      y: '60px',\n      interval: 0.07,\n      duration: 0.7,\n    },\n    wave: {\n      y: '40px',\n      interval: 0.04,\n      duration: 0.4,\n      ease: 'ease-in-out',\n    },\n    float: {\n      x: '200px',\n      ease: 'cubic-bezier(0.68, -0.55, 0.265, 1.55)',\n      duration: 1.2,\n      interval: 0.1,\n    },\n    bounce: { y: '200px', ease: 'cubic-bezier(0.68, -0.55, 0.265, 1.55)' },\n    throw: {\n      y: '200px',\n      scale: 2,\n      interval: 0.07,\n    },\n    diagonal: {\n      x: '200px',\n      y: '-200px',\n      ease: 'cubic-bezier(0.68, -4.55, 0.265, 1.55)',\n    },\n    rifle: {\n      y: '100px',\n      x: '-500px',\n      ease: 'ease-in',\n      duration: 0.3,\n      interval: 0.03,\n    },\n    lights: {\n      y: '-20px',\n      ease: 'ease-out',\n      duration: 1,\n      interval: 0.4,\n    },\n  };\n\nexport const WHITE_SPACE_CODE = ' ';\nconst DEFAULT_INTERVAL = 0.04;\nconst DEFAULT_DURATION = 0.4;\nconst DEFAULT_TYPE = 'words';\nconst DEFAULT_ANIMATION = {\n  y: '-30px',\n};\nconst DEFAULT_TAG = 'div';\nconst DEFAULT_INTESECTION_OBSERVER_ROOT_MARGIN = '20%';\nconst DEFAULT_THRESHOLD = 0;\n\nconst renderWords = (\n  arrayToRender: string[],\n  includeWhiteSpaces: boolean\n): ReactNode =>\n  arrayToRender.map((fragment, index) =>\n    fragment !== WHITE_SPACE_CODE ? (\n      <AnimatedFragment\n        key={index}\n        dangerouslySetInnerHTML={{ __html: fragment }}\n      />\n    ) : (\n      (includeWhiteSpaces && (\n        <AnimatedFragment\n          key={`${index}&nbsp;`}\n          dangerouslySetInnerHTML={{ __html: '&nbsp;' }}\n        />\n      )) ||\n      WHITE_SPACE_CODE\n    )\n  );\n\nconst renderChars = (\n  arrayToRender: string[],\n  interval: number,\n  includeWhiteSpaces: boolean\n): ReactNode => {\n  let fullIndex = -1;\n\n  return arrayToRender.map((fragment, index) => {\n    const chars =\n      fragment !== WHITE_SPACE_CODE ? Array.from(fragment) : [WHITE_SPACE_CODE];\n\n    if (chars[0] !== WHITE_SPACE_CODE)\n      return (\n        <span key={index}>\n          {chars.map((char, charIndex) => {\n            fullIndex += 1;\n\n            return (\n              <AnimatedFragment\n                key={charIndex}\n                dangerouslySetInnerHTML={{ __html: char }}\n                style={{ animationDelay: `${interval * fullIndex}s` }}\n              />\n            );\n          })}\n        </span>\n      );\n\n    return includeWhiteSpaces ? (\n      <AnimatedFragment\n        key={`${index}&nbsp;`}\n        dangerouslySetInnerHTML={{ __html: '&nbsp;' }}\n        style={{ animationDelay: `${interval * fullIndex}s` }}\n      />\n    ) : (\n      WHITE_SPACE_CODE\n    );\n  });\n};\n\nconst AnimatedText: FC<AnimatedTextProps> = ({\n  children = '',\n  type = DEFAULT_TYPE,\n  interval,\n  duration,\n  animation = DEFAULT_ANIMATION,\n  animationType = DEFAULT_TYPE,\n  tag = DEFAULT_TAG,\n  includeWhiteSpaces = false,\n  rootMargin,\n  threshold,\n  ...props\n}) => {\n  const [arrayToRender, setArrayToRender] = useState<string[]>([]);\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  const wrapperRef = useRef(null);\n\n  const animationOptions = PREDEFINED_ANIMATIONS?.[animationType] ?? animation;\n\n  useEffect(() => {\n    if (typeof children !== 'string' && typeof children !== 'number') {\n      console.error(\n        \"Only string (ReactText) is currently allowed as react-animated-text-content component's child. Please, change to proper type.\"\n      );\n      return;\n    }\n\n    const concatedChildren = concatFragments(children);\n    setArrayToRender(concatedChildren);\n\n    const observer = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach((entry) => {\n          if (!entry.isIntersecting) return;\n\n          setShouldAnimate(true);\n          if (wrapperRef.current) observer.unobserve(wrapperRef.current);\n        });\n      },\n      {\n        rootMargin: rootMargin || DEFAULT_INTESECTION_OBSERVER_ROOT_MARGIN,\n        threshold: threshold || DEFAULT_THRESHOLD,\n      }\n    );\n\n    if (wrapperRef.current) {\n      observer.observe(wrapperRef.current);\n    }\n\n    return () => {\n      setArrayToRender([]);\n      setShouldAnimate(false);\n    };\n  }, [children, type]);\n\n  const uid = uuidv4();\n\n  return (\n    <StyledWrapper\n      as={tag}\n      count={type === 'words' ? arrayToRender.length : 0}\n      interval={interval || (animationOptions?.interval ?? DEFAULT_INTERVAL)}\n      duration={duration || (animationOptions?.duration ?? DEFAULT_DURATION)}\n      ref={wrapperRef}\n      shouldAnimate={shouldAnimate}\n      uid={uid}\n      animation={animationOptions}\n      data-testid=\"animated-text\"\n      {...props}\n    >\n      {type === 'words'\n        ? renderWords(arrayToRender, includeWhiteSpaces)\n        : renderChars(\n            arrayToRender,\n            interval || (animationOptions?.interval ?? DEFAULT_INTERVAL),\n            includeWhiteSpaces\n          )}\n    </StyledWrapper>\n  );\n};\n\nexport default AnimatedText;\n"],"names":["styled","css","React","useState","useRef","useEffect","uuidv4"],"mappings":"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"}